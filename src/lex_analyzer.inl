/* Lexegen autogenerated analyzer file - do not edit! */
/* clang-format off */

static uint8_t symb2meta[256] = {
    0, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 4, 5, 1, 1, 1,
    6, 1, 1, 7, 8, 1, 8, 9, 10, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 1, 1, 1, 1, 1, 13, 13, 13, 13, 14, 13, 15,
    15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 16, 15, 15, 1, 17, 1, 1, 15, 1, 13, 13, 13, 13, 14,
    13, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 16, 15, 15, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1
};

static int def[47] = {
    -1, 0, 0, 2, -1, 3, 3, 3, 3, 8, -1, 10, 10, 10, 11, 11, -1, 6, 6, -1, 17, 5, 5, 21, -1, -1, 21, -1, 17, -1, -1, -1,
    31, -1, -1, 34, 29, -1, 37, 38, -1, 40, 30, 42, 27, -1, -1
};

static int base[47] = {
    0, 13, 18, 33, 0, 46, 63, 14, 66, 0, 83, 100, 28, 115, 30, 112, 0, 129, 144, 0, 142, 161, 176, 147, 0, 179, 0, 184,
    0, 30, 113, 144, 28, 176, 42, 0, 32, 113, 73, 0, 171, 0, 201, 208, 0, 208, 79
};

static int next[226] = {
    -1, 24, 25, 4, 26, 24, 28, 24, 24, 29, 30, 31, 32, 33, 33, 33, 33, 34, 27, 3, 3, 10, 5, 3, 6, 3, 3, 3, 7, 3, 3, 3,
    3, 3, 3, 8, -1, 3, 3, 3, 16, 36, 36, 3, -1, 25, 37, 5, 5, 21, 9, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 22, 6, 6, 17,
    6, 6, 3, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 18, -1, 44, 3, 10, 10, 11, 10, 10, 10, 12, 10, 10, 10, 10, 10, 10, 10, 10,
    10, 13, 11, 11, 11, 11, 11, 11, 14, 11, 11, 11, 11, 11, 11, 11, 11, 11, 15, 10, 11, 11, 38, 10, 42, 39, 39, 10, 10,
    10, 11, 17, 17, 10, 17, 17, 19, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 20, 6, 17, 6, 6, 21, 6, 36, 6, 32, 32, 6,
    37, 17, 40, 6, 21, 21, 21, 19, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 23, 5, 5, 25, 41, 41, 41, 41, 44, 33,
    33, 33, 33, 33, 33, 5, -1, -1, 35, 45, 45, 45, 45, 46, 42, 42, -1, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
    42, 43, 45, 45, 45, 45, 45, 45, 42
};

static int check[226] = {
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 7, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3,
    12, 3, 14, 29, 29, 3, 32, 34, 36, 5, 5, 5, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 8, 6, 6, 6, 6,
    6, 6, 6, 6, 6, 6, 6, 38, 46, 8, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11,
    11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 13, 15, 30, 37, 13, 30, 37, 37, 13, 13, 13, 15, 17, 17, 13, 17,
    17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 18, 20, 18, 18, 23, 18, 31, 18, 31, 31, 18, 31, 20, 31, 18, 21,
    21, 23, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 22, 22, 25, 40, 40, 40, 40, 27, 33, 33, 33, 33, 33,
    33, 22, 25, 25, 25, 27, 27, 27, 27, 27, 42, 42, 42, 42, 42, 42, 42, 42, 42, 43, 42, 42, 42, 42, 42, 42, 42, 45, 45,
    45, 45, 45, 45, 43
};

static int accept[47] = {
    0, 0, 1, 1, 9, 1, 1, 1, 10, 0, 1, 0, 1, 0, 0, 0, 2, 0, 0, 3, 0, 0, 0, 0, 10, 8, 10, 10, 10, 10, 10, 5, 5, 4, 10, 0,
    6, 0, 0, 6, 0, 5, 2, 0, 0, 7, 0
};

static int lex(const char* first, const char* last, int** p_sptr, unsigned* p_llen, int flags) {
    int *sptr = *p_sptr, *sptr0 = sptr - *p_llen;
    int state = *(sptr - 1);
    while (first < last) { /* Analyze till transition is impossible */
        uint8_t meta = symb2meta[(unsigned char)*first];
        do {
            int l = base[state] + meta;
            if (check[l] == state) {
                state = next[l];
                break;
            }
            state = def[state];
        } while (state >= 0);
        if (state < 0) { goto unroll; }
        *sptr++ = state, ++first;
    }
    if ((flags & flag_has_more) || sptr == sptr0) {
        *p_sptr = sptr;
        *p_llen = (unsigned)(sptr - sptr0);
        return err_end_of_input;
    }
unroll:
    *p_sptr = sptr0;
    while (sptr != sptr0) { /* Unroll down-to last accepting state */
        int n_pat = accept[(state = *(sptr - 1))];
        if (n_pat > 0) {
            *p_llen = (unsigned)(sptr - sptr0);
            return n_pat;
        }
        --sptr;
    }
    *p_llen = 1; /* Accept at least one symbol as default pattern */
    return predef_pat_default;
}
